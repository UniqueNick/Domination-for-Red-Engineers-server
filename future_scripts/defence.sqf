/** ARIGATO DEFENCE SCRIPT (v1.3)* (c) Arigato Software, 2012*/ARGT_DEFENCE_POSITION = {  private ["_military", "_civilian", "_centre", "_radius", "_positions", "_patrol", "_units", "_group", "_unit", "_idx", "_pos", "_dir"];  _military = if ( typename (_this select 0) == "ARRAY" ) then {_this select 0} else {[_this select 0]};  _civilian = _this select 1;  _centre = _this select 2;  _radius = if ( count _this > 3 ) then {_this select 3} else {100};  _units = [];  {    _group = if ( typename _x == "GROUP" ) then {_x} else {group _x};    _group setcombatmode "YELLOW";    _group setbehaviour "AWARE";    _units = _units + units _group;  } foreach _military;  _positions = [_centre, _radius] call ARGT_DEFENCE_SCAN;  _patrol = (count _units) / 10;  _patrol = _patrol + random _patrol;  [_centre, _radius, side (_units select 0), (count _units) / 4] spawn ARGT_DEFENCE_ESCAPE;  while { count _units > 0 } do {    _idx = floor random count _units;    _unit = _units select _idx;    _units set [_idx, "*"];    _units = _units - ["*"];    if ( _patrol >= 1 || count _positions == 0 ) then {      if ( _patrol >= 0 ) then {        [_unit, _centre, _radius] spawn ARGT_DEFENCE_PATROL;        if ( _patrol >= 1 ) then {_patrol = _patrol - 1};      };    } else {      _idx = floor random count _positions;      _pos = _positions select _idx;      _dir = (_pos select 1) - 15 + random 30;      _unit setposatl (_pos select 0);      _unit setdir _dir;      if ( _unit != player ) then {        _unit setvariable ["ARGT_DEFENCE_CENTRE", _centre, true];        _unit setvariable ["ARGT_DEFENCE_RADIUS", _radius, true];        [_unit] spawn ARGT_DEFENCE_CHICKEN;      };      _positions set [_idx, "*"];      _positions = _positions - ["*"];    };  };  [_civilian, _centre, _radius] call ARGT_DEFENCE_CIVILIAN;};ARGT_DEFENCE_DOORS = {  private ["_centre", "_radius", "_phase", "_anims", "_animCfgList", "_configname"];  _centre = _this select 0;  _radius = _this select 1;  _phase  = if ( count _this > 2 ) then {_this select 2} else {1};  _anims = ["Lights_1", "Lights_2", "Lights_3", "Lights_4", "Lights_5"];  {    _animCfgList = configfile >> "CfgVehicles" >> typeof _x >> "AnimationSources";    for "_i" from 0 to count _animCfgList - 1 do {      _configname = configname (_animCfgList select _i);      if ( ! (_configname in _anims) ) then {_x animate [_configname, _phase]};    };  } foreach (_centre nearobjects ["House", _radius]);};/* ------------------------------------------------------------------------- */ARGT_DEFENCE_OCCUPIED = [];ARGT_DEFENCE_CIVILIAN = {  private ["_groups", "_centre", "_radius", "_group"];  _groups = if ( typename (_this select 0) == "ARRAY" ) then {_this select 0} else {[_this select 0]};  _centre = _this select 1;  _radius = if ( count _this > 2 ) then {_this select 2} else {100};  {    _group = if ( typename _x == "GROUP" ) then {_x} else {group _x};    _group setcombatmode "BLUE";    {      _x setcaptive true;      _x setskill ["courage", 1];      _x allowfleeing 0;      if ( _x iskindof "Woman_EP1" ) then {[_x] spawn ARGT_DEFENCE_SHAHID};      [_x, _centre, _radius] spawn ARGT_DEFENCE_PATROL;      [_x] spawn ARGT_DEFENCE_BEHAVIOUR;    } foreach units _group;  } foreach _groups;};ARGT_DEFENCE_PATROL = {  private ["_unit", "_centre", "_radius", "_limited", "_patrol", "_dir", "_length", "_position", "_targets"];  _unit = _this select 0;  _centre = _this select 1;  _radius = if ( count _this > 2 ) then {_this select 2} else {100};  _limited = if ( count _this > 3 ) then {_this select 3} else {true};  _patrol = _unit getvariable "ARGT_DEFENCE_PATROL";  if ( isnil "_patrol" ) then {_patrol = false};  if ( ! _patrol ) then {    _unit setspeedmode "FULL";    if ( ! (_unit iskindof "Woman") && ! (_unit iskindof "Woman_EP1") ) then {[_unit] spawn ARGT_DEFENCE_COLLECTION};    _unit setvariable ["ARGT_DEFENCE_PATROL", true, true];    while { alive _unit } do {      if ( _unit getvariable "ARGT_DEFENCE_PATROL" ) then {        _dir = random 360;        _length = 10 + random _radius;        _position = [(_centre select 0) + _length * sin _dir, (_centre select 1) + _length * cos _dir];        _unit domove _position;        waituntil { movetocompleted _unit || movetofailed _unit || unitready _unit || ! alive _unit };        if ( _limited ) then        {          _targets = _unit neartargets 69;          if ( {_x select 3 > 10} count _targets > 0 ) then          {            _unit setbehaviour "AWARE";            _unit setspeedmode "FULL";          } else {_unit setspeedmode "LIMITED"};        };      } else {sleep 5};    };  };};ARGT_DEFENCE_CHICKEN = {  private ["_unit", "_handle_damage", "_handle_firednear", "_position"];  _unit = _this select 0;  _handle_damage = _unit addeventhandler ["HandleDamage", {call ARGT_DEFENCE_DAMAGE}];  _handle_firednear = _unit addeventhandler ["FiredNear", {call ARGT_DEFENCE_FIREDNEAR}];  _unit setvariable ["ARGT_DEFENCE_CHICKEN", true, true];  dostop _unit;  if ( random 1 > 0.4 ) then {[_unit] spawn ARGT_DEFENCE_STOP};  _unit setvariable ["ARGT_DEFENCE_CAREFUL", random 1 < 0.3, true];  sleep 10;  _position = getposatl _unit;  while { alive _unit && _unit getvariable "ARGT_DEFENCE_CHICKEN" } do {    _unit setunitpos "up";    sleep (3 + random 10);    if ( _unit distance _position > 0.5 ) then {_unit setvariable ["ARGT_DEFENCE_CHICKEN", false, true]};    if ( alive _unit && _unit getvariable "ARGT_DEFENCE_CHICKEN" ) then {      _unit setposatl _position;      _unit setunitpos "middle";      sleep (5 + random 20);    };  };  _unit removeeventhandler ["HandleDamage", _handle_damage];  _unit removeeventhandler ["FiredNear", _handle_firednear];  _unit setunitpos "auto";};ARGT_DEFENCE_SCAN = {  private ["_centre", "_radius", "_houses", "_house", "_result", "_bpos", "_position", "_dir"];  _centre = _this select 0;  _radius = if ( count _this > 1 ) then {_this select 1} else {100};  _houses = _centre nearobjects ["House", _radius];  _result = [];  {    _house = _x;    _position = _house buildingpos 0;    if ( _position select 0 != 0 ) then {      _bpos = 1;      while { _position select 0 != 0 } do {        _dir = [getposatl _house, _position] call ARGT_DEFENCE_DIR;        _position set [2, (_position select 2) + 0.1];        _result set [count _result, [_position, floor _dir]];        _bpos = _bpos + 1;        _position = _house buildingpos _bpos;      };    };  } foreach _houses;  _result};ARGT_DEFENCE_SHAHID = {  private ["_unit", "_side", "_targets", "_z", "_velocity", "_position", "_distance", "_min"];  _unit = _this select 0;  _unit setcaptive false;  _side = side _unit;  _unit setcaptive true;  _unit setvariable ["ARGT_DEFENCE_UP", false, true];  while { alive _unit } do {    sleep 5;    _targets = _unit neartargets 12;    _z = getposatl _unit select 2;    if ( {_x select 3 > 10 && (_x select 4) iskindof "Man" && (_x select 4) distance _unit < 12 && abs (_z - (getposatl (_x select 4) select 2)) < 2} count _targets > 0 &&         {alive _x && (side _x == _side || side _x == civilian) && ! (_x iskindof "Woman_EP1")} count (nearestobjects [_unit, ["Man"], 20]) == 0 ) exitwith {      _unit setcaptive false;      sleep 0.5;      _unit say ["akbar", 10];      sleep 1.5;      if ( alive _unit ) then {        _unit allowdamage false;        {"Grenadebase" createvehicle getpos _unit} foreach [1,2,3,4];        _velocity = velocity _unit;        _unit setvelocity [_velocity select 0, _velocity select 1, (_velocity select 2) + 2];        _unit spawn {sleep 1; _this setdamage 1};      };    };    _targets = _unit neartargets 69;    if ( {_x select 3 > 10 && (_x select 4) iskindof "Man" && abs (_z - (getposatl (_x select 4) select 2)) < 2} count _targets > 0 ) then {      _position = [0,0,0];      _min = 10000;      {        if ( _x select 3 > 10 && (_x select 4) iskindof "Man" && abs (_z - (getposatl (_x select 4) select 2)) < 2 ) then        {          _distance = _unit distance (_x select 4);          if ( _distance < _min ) then {            _min = _distance;            _position = getpos (_x select 4);          };        };      } foreach _targets;      if ( _position select 0 != 0 ) then {        _unit setvariable ["ARGT_DEFENCE_PATROL", false, true];        _unit setunitpos "up";        _unit domove _position;        _unit setspeedmode "FULL";        if ( ! (_unit getvariable "ARGT_DEFENCE_UP") ) then {          _unit setvariable ["ARGT_DEFENCE_UP", true, true];          [_unit] spawn {            waituntil {              _unit setunitpos "up";              movetocompleted _unit || movetofailed _unit || unitready _unit || ! alive _unit            };            _unit setvariable ["ARGT_DEFENCE_UP", false, true];            _unit setvariable ["ARGT_DEFENCE_PATROL", true, true];          };        };      };    };  };};ARGT_DEFENCE_COLLECTION = {  private ["_unit", "_men", "_dead", "_occupied"];  _unit = _this select 0;  while { alive _unit } do {    waituntil { sleep (7 + random 3); (primaryweapon _unit == "" && secondaryweapon _unit == "" || count magazines _unit == 0) };    _men = nearestobjects [_unit, ["Man"], 69];    {      if ( ! alive _x && getposatl _x select 2 < 2 ) then {        _dead = _x;        _occupied = str _dead;        if ( ! (_occupied in ARGT_DEFENCE_OCCUPIED) && (primaryweapon _dead != "" || secondaryweapon _dead != "") && count magazines _dead > 0 ) exitwith {          ARGT_DEFENCE_OCCUPIED set [count ARGT_DEFENCE_OCCUPIED, _occupied];          _unit setvariable ["ARGT_DEFENCE_PATROL", false, true];          _unit domove getpos _dead;          _unit setspeedmode "FULL";          waituntil { movetocompleted _unit || movetofailed _unit || unitready _unit || ! alive _unit };          if ( alive _unit && _unit distance _dead < 3 && (primaryweapon _dead != "" || secondaryweapon _dead != "") && count magazines _dead > 0 ) then {            _unit dowatch _dead;            _unit setunitpos "middle";            _unit forcespeed 0;            sleep 2;            _unit disableai "move";            if ( ! alive _unit ) exitwith {};            _unit setcombatmode "RED";            _unit setbehaviour "AWARE";            {_dead addweapon _x} foreach weapons _unit;            removeallweapons _unit;            sleep 1;            if ( ! alive _unit ) exitwith {};            {              _unit addmagazine _x;              _dead removemagazine _x            } foreach magazines _dead;            sleep 1;            if ( ! alive _unit ) exitwith {};            {              _unit addweapon _x;               if ( primaryweapon _unit != "" ) then {                _unit selectweapon primaryweapon _unit;                _unit setcaptive false;              };              if ( secondaryweapon _unit != "" ) then {_unit setcaptive false};            } foreach weapons _dead;            removeallweapons _dead;            if ( primaryweapon _unit == "" && secondaryweapon _unit != "" ) then {_unit selectweapon secondaryweapon _unit};            sleep 1;            if ( primaryweapon _unit != "" ) then {_unit selectweapon primaryweapon _unit};            _unit dowatch objnull;            _unit enableai "move";            _unit forcespeed -1;            _unit setunitpos "auto";          };          ARGT_DEFENCE_OCCUPIED = ARGT_DEFENCE_OCCUPIED - [_occupied];          _unit setvariable ["ARGT_DEFENCE_PATROL", true, true];        };      };    } foreach _men;  };  };ARGT_DEFENCE_BEHAVIOUR = {  private ["_unit"];  _unit = _this select 0;  while { alive _unit } do {    _unit setbehaviour "SAFE";    waituntil { sleep (10 + random 20); behaviour _unit == "COMBAT" };    _unit setspeedmode "FULL";    _unit setbehaviour "CARELESS";    sleep (10 + random 20);  };};ARGT_DEFENCE_ESCAPE = {  private ["_centre", "_radius", "_side", "_count", "_escape"];  _centre = _this select 0;  _radius = _this select 1;  _side = _this select 2;  _count = _this select 3;  _escape = false;  while { ! _escape } do {    sleep 10;    if ( {side _x == _side && _x distance _centre < _radius} count allunits <= _count ) then {      {        if ( side _x == _side && _x distance _centre < _radius ) then {          _x setvariable ["ARGT_DEFENCE_CHICKEN", false, true];          _x setunitpos "middle";          [_x, _centre, _radius, false] spawn ARGT_DEFENCE_PATROL;          _escape = true;        };      } foreach allunits;    };  };};ARGT_DEFENCE_DIR = {  private ["_pos1", "_pos2", "_distance", "_dir"];  _pos1 = _this select 0;  _pos2 = _this select 1;  _distance = [_pos1 select 0, _pos1 select 1, 0] distance [_pos2 select 0, _pos2 select 1, 0];  _dir = asin (((_pos2 select 0) - (_pos1 select 0)) / _distance);  if ( _pos2 select 1 < _pos1 select 1 ) then {_dir = 180 - _dir};  _dir};ARGT_DEFENCE_STOP = {  private ["_unit"];  _unit = _this select 0;  waituntil {    _unit forcespeed 0;    ! alive _unit || ! (_unit getvariable "ARGT_DEFENCE_CHICKEN")  };  _unit forcespeed -1;};ARGT_DEFENCE_DAMAGE = {  private ["_unit", "_damage"];  _unit = _this select 0;  _damage = _this select 2;  _unit forcespeed -1;  _unit setunitpos "middle";  _damage};ARGT_DEFENCE_FIREDNEAR = {  private ["_unit", "_firer"];  _unit = _this select 0;  _firer = _this select 1;  if ( side _unit != side _firer ) then {    _unit setunitpos "middle";    if ( _unit getvariable "ARGT_DEFENCE_CAREFUL" ) then {      [_unit, _firer] spawn {        private ["_unit", "_firer", "_centre", "_radius"];        _unit = _this select 0;        _firer = _this select 1;        _unit setvariable ["ARGT_DEFENCE_CHICKEN", false, true];        sleep 1;        _unit forcespeed -1;        _unit domove position _firer;        _unit dofire _firer;        _centre = _unit getvariable "ARGT_DEFENCE_CENTRE";        _radius = _unit getvariable "ARGT_DEFENCE_RADIUS";        if ( ! isnil "_centre" ) then {          sleep 30;          [_unit, _centre, _radius, false] spawn ARGT_DEFENCE_PATROL;        };      };    };  };};